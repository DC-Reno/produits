"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
function CreateComment(_a) {
    var avatarURL = _a.avatarURL, userName = _a.userName, submitComment = _a.submitComment;
    var _b = react_1.useState(false), privateComment = _b[0], setPrivate = _b[1];
    var _c = react_1.useState(""), comment = _c[0], setComment = _c[1];
    var _d = react_1.useState("comment"), commentKind = _d[0], setCommentKind = _d[1];
    return (react_1.default.createElement("div", { className: "avatar margin-bottom--md", style: { fontSize: "14px" } },
        react_1.default.createElement("img", { className: "avatar__photo avatar__photo--md", src: avatarURL, title: userName, style: { display: "block" } }),
        react_1.default.createElement("div", { className: "avatar__intro" },
            react_1.default.createElement("div", { className: "avatar__name" }, userName),
            react_1.default.createElement("small", { className: "avatar__subtitle" },
                react_1.default.createElement("select", { value: commentKind, onChange: function (e) { return setCommentKind(e.target.value); } },
                    react_1.default.createElement("option", { value: "comment" }, "Comment"),
                    react_1.default.createElement("option", { value: "question" }, "Question"),
                    react_1.default.createElement("option", { value: "bug" }, "Bug")),
                react_1.default.createElement("span", { onClick: function () { return setPrivate(!privateComment); }, style: { cursor: "pointer" }, title: "Make it only visible to you and the site administrators" },
                    react_1.default.createElement("input", { type: "checkBox", readOnly: true, checked: privateComment }),
                    " ",
                    "Private"),
                react_1.default.createElement("textarea", { placeholder: "", value: comment, onChange: function (e) { return setComment(e.target.value); }, rows: 3, style: { flexGrow: 1, width: "100%", resize: "vertical" } }),
                " ",
                comment != "" && react_1.default.createElement("button", { onClick: function () { return submitComment({ privateComment: privateComment, comment: comment, commentKind: commentKind }); }, className: "btn btn-small btn-primary" }, "Save")))));
}
exports.default = CreateComment;
//# sourceMappingURL=CreateComment.js.map